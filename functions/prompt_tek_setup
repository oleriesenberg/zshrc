# vim:ft=zsh

zstyle ':vcs_info:*' enable git svn
zstyle ':vcs_info:*' formats '%s::%b@'

# precmd {{{
prompt_tek_precmd_func() {

    local termwidth
    (( termwidth = ${COLUMNS} - 1 ))

    # retrieve the branch etc. once to prevent delay
    #vcs_info
    set_scm_info

    # wait for git
    #if [[ -n "$git_info_pending" ]]; then
        #scminfo="pending"
        #sleep 1
    #fi

    # calc prompt size
    if [[ -n "$scminfo" ]]; then
        local scmstring="($scminfo)"
    fi
    if [[ -n "$ssh_client" ]]; then
        local sshstring="${ssh_client}--"
    fi
    if [[ -n "$vcs_info_msg_0_" ]]; then
        local vcsstring="($(print ${(%)vcs_info_msg_0_}))"
    fi
    local promptsize=${#${(%):---(%n@$sshstring%m:)---${scmstring}--}}
    #local promptsize=${#${(%):---(%n@$sshstring%m:)---${(%)vcsstring}--${scmstring}--}}
    local pwdsize=${#${(%):-%~}}
    
    # Truncate the path if it's too long.
    fillbar=""
    pwdlen=""

    if [[ "$promptsize + $pwdsize" -gt $termwidth ]]; then
	    ((pwdlen=$termwidth - $promptsize))
    else
        fillbar="\${(l.(($termwidth - ($promptsize + $pwdsize)))..${hbar}.)}"
    fi
}
# }}}

# particular info retrieval {{{
scm_info_prompt(){
    local lparen rparen
    if [[ -n "$scminfo" ]]; then
        lparen="$pr_blue$hbar($shift_out$pr_green"
        rparen="$pr_blue)$shift_in$hbar"
        print $lparen$scminfo$rparen
    else
        print $hbar$hbar
    fi
}

git_addfile_info_prompt(){
    if [[ -n "$git_next_addfile" ]]; then
        print "$pr_yellow$git_next_addfile$pr_blue$sep_bar"
    fi
}

gitstash_info_prompt()
{
   # TODO 
}

ssh_info_prompt(){
    if [[ -n "$ssh_client" ]]; then
        print "$pr_red$ssh_client$pr_green\-\>"
    fi
}

vimsession_info_prompt(){
    # print red 'v' in the prompt if this is a shell in vim,
    # a yellow 'v' if there is a session file in cwd
    if [[ -n "$VIMRUNTIME" ]]; then
        print "${pr_red}v$sep_bar" 
    elif [[ -f .session.vim ]]; then
        print "${pr_yellow}v$sep_bar"
    fi
}

dtach_info_prompt(){
  if [[ -n "$DTACH_SOCKET" ]]; then
    print -- "-\>$(basename $DTACH_SOCKET)"
  fi
}

vcs_info_prompt(){
    local lparen rparen
    if [[ -n ${vcs_info_msg_0_} ]]; then
        lparen="$pr_blue$hbar($shift_out$pr_green"
        rparen="$pr_blue)$shift_in$hbar"
        #if [[ - ]]; then
            #«»
        #fi«»
        print $lparen$vcs_info_msg_0_$rparen
    else
        print $hbar$hbar
    fi
}

# }}}

# setup {{{
prompt_tek_setup(){
    # See if we can use colors.
    autoload colors zsh/terminfo
    if [[ "$terminfo[colors]" -ge 8 ]]; then
        colors
    fi
    #
    # set colors
    for color in red green yellow blue magenta cyan white; do
      eval pr_$color='%{$terminfo[bold]$fg[${(L)color}]%}'
      eval pr_light_$color='%{$fg[${(L)color}]%}'
      (( count = $count + 1 ))
    done
    no_color="%{$terminfo[sgr0]%}"


    # See if we can use extended characters to look nicer.
    typeset -A altchar
    set -A altchar ${(s..)terminfo[acsc]}
    set_charset="%{$terminfo[enacs]%}"
    shift_in="%{$terminfo[smacs]%}"
    shift_out="%{$terminfo[rmacs]%}"
    hbar=${altchar[q]:--}
    ul_corner=${altchar[l]:--}
    ll_corner=${altchar[m]:--}
    lr_corner=${altchar[j]:--}
    ur_corner=${altchar[k]:--}

    sep_bar="$pr_blue\|"

    
    # Decide if we need to set titlebar text.
    case $TERM in
	xterm*)
	    titlebar=$'%{\e]0;%(!.-=*[ROOT]*=- | .)%n@%m:%~ | ${COLUMNS}x${LINES} | %y$(dtach_info_prompt)\a%}'
	    ;;
	screen)
	    titlebar=$'%{\e_screen \005 (\005t) | %(!.-=[ROOT]=- | .)%n@%m:%~ | ${COLUMNS}x${LINES} | %y\e\\%}'
	    ;;
	*)
	    titlebar=''
	    ;;
    esac

    # Decide whether to set a screen title
    if [[ "$TERM" == "screen" ]]; then
        screen_title=$'%{\ekzsh\e\\%}'
    else
        screen_title=''
    fi


    
    # TODO ssh client im term title
    PROMPT='$set_charset$screen_title${(e)titlebar}\
$pr_cyan$shift_in$ul_corner$pr_blue$hbar$shift_out(\
$pr_green%(!.%SROOT%s.%n)$pr_green@$(ssh_info_prompt)%m:$pr_blue$shift_out$pr_red%$pwdlen<...<%~%<<$shift_in\
$pr_blue)$shift_in$hbar$pr_cyan$hbar${(e)fillbar}\
$(scm_info_prompt)\
$pr_cyan$ur_corner$shift_out\

%{$pr_cyan$shift_in$ll_corner$pr_blue$hbar$shift_out%2G%}(\
%(!.$pr_red.$pr_white) %# '

    RPROMPT=' %{$pr_cyan$shift_in$hbar$pr_blue$hbar$shift_out%2G%}\
(%(?..$pr_light_red%?$pr_blue|)\
$pr_yellow%40<...<$(git_addfile_info_prompt)%<<\
$(vimsession_info_prompt)\
$(gitstash_info_prompt)\
$pr_yellow%D{%H:%M}$pr_blue)%{$shift_in$hbar$pr_cyan$lr_corner$shift_out$no_color%2G%}'

    PS2='$pr_cyan$shift_in$hbar$shift_out\
$pr_blue$shift_in$hbar$shift_out(\
$pr_light_green%_$pr_blue)$shift_in$hbar$shift_out\
$pr_cyan$shift_in$hbar$shift_out$no_color '
}
# }}}

prompt_tek_setup
